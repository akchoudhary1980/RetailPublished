@model Ret.VenderPaymentModel
@{
    Layout = "~/Views/Shared/_admin.cshtml";
}
<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/jquery-ui-1.10.2.js"></script>
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/AjaxModules.js"></script>

<script type="text/javascript">
    GetDatePicker('#TransactionDate');

    SetInputNumericIndian('Amount');

    function FormValidation() {
        RemoveIndianCulture("Amount");
    }
    
</script>

<!--for Customer Auto Complete-->
<script type="text/javascript">
    $(document).ready(function () {
        $("#Vender").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Share/VenderNameAutoComplete",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.VenderName, value: item.VenderName, id: item.VenderID };
                        }))
                    },
                })
            },
            select: function (event, ui) {
                $("#VenderHiddenID").val(ui.item.id);
                $("#VenderName").val(ui.item.value);
            }
        });
    })
</script>
<div class="page-header animated bounceInRight">
    <div class="card">
        <div class="card-block bg-primary">
            <div class="row ">
                <div class="col-lg-4">
                    <h5 class="text-uppercase font-weight-bold">New Vender Payment</h5>
                </div>
                <div class="col-lg-8 align-items-end">
                    <div class="page-header-breadcrumb">
                        <ul class="breadcrumb-title">
                            <li class="breadcrumb-item">
                                <a href="@Url.Action("Index", "Dashboard")"> <i class="icofont icofont-home" style="color:white"></i> </a>
                            </li>
                            <li class="breadcrumb-item">
                                <a href="@Url.Action("Index", "VenderPayment")" style="color:white">Home / Masters / New Vender Payment</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row animated bounceInUp">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-9 col-9"><h3>@ViewData["PageTitle"]</h3></div>
                    <div class="col-md-3 col-3">
                        <a href="@Url.Action("Index", "VenderPayment")" class="btn btn-primary btn-outline-primary float-right">
                            <i class="icofont icofont-user-alt-3"></i> Back to List
                        </a>
                    </div>
                </div>
            </div>

            <div class="card-block">
                <h4 class="sub-title">Add New Payment</h4>
                @using (Html.BeginForm("Create", "VenderPayment", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <di class="form-group row">
                        @Html.Label("", "Vender Name", new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBox("Vender", "", new { @class = "form-control" })
                            @Html.Hidden("VenderHiddenID", "0")
                        </div>
                    </di>

                    <div class="form-group row">
                        @Html.Label("Vender Name", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBox("VenderName","", new { @class = "form-control", @readonly = "@readonly" })
                        </div>
                        @Html.LabelFor(model => model.PaymentMethod, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.PaymentMethod,
                            Ret.VenderPaymentController.GetPaymentMethodList(), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PaymentMethod, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.PaymentType, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.PaymentType,
                            Ret.VenderPaymentController.GetPaymentTypeList(), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PaymentType, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.PaymentMode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.PaymentMode,
                            Ret.VenderPaymentController.GetPaymentModeList(), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PaymentMode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.TransactionDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.TransactionDate, new { htmlAttributes = new { @class = "form-control" , @Type = "Text" } })
                            @Html.ValidationMessageFor(model => model.TransactionDate, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-sm-12">
                            <input type="submit" onclick="return FormValidation();" value="Submit" class="btn btn-primary btn-out float-right" />
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

